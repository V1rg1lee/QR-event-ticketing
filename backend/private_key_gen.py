from Crypto.PublicKey import RSA

def generate_rsa_keys():
    key = RSA.generate(2048)

    # Sauvegarde de la clÃ© privÃ©e au format PKCS#1 (compatible Rust)
    with open("private_key.pem", "wb") as priv_file:
        priv_file.write(key.export_key(format="PEM", pkcs=1))

    # Sauvegarde de la clÃ© publique pour la vÃ©rification en Flask
    with open("public_key.pem", "wb") as pub_file:
        pub_file.write(key.publickey().export_key(format="PEM"))

    print("âœ… ClÃ©s RSA gÃ©nÃ©rÃ©es avec succÃ¨s !")
    print("ğŸ”‘ ClÃ© privÃ©e : private_key.pem")
    print("ğŸ”“ ClÃ© publique : public_key.pem")

# ExÃ©cute la gÃ©nÃ©ration des clÃ©s
generate_rsa_keys()
